@model Piranha.Models.Manager.PageModels.EditModel
@{
    ViewBag.Selected = "Cms" ;
    ViewBag.SelectedTab = "Page" ;
}
@section Head {
    <script type="text/javascript" src="@Url.Content("~/Areas/Manager/Content/Js/jquery.page.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Areas/Manager/Content/Js/jquery.attachment.js")"></script>
    @Html.Partial("~/Areas/Manager/Views/Shared/Partial/TinyMCE.cshtml")
    <script type="text/javascript">

        $(document).ready(function () {
            $("#Page_Title").focus();

            $("#Page_ParentId").change(function () {
                var page_id = $("#Page_Id").val();
                var page_parentid = $("#org_parentid").val();
                var page_seqno = $("#Page_Seqno").val();
                var parentid = $("#Page_ParentId").val();

                $.get("@Url.Action("siblings")?page_id=" + page_id + "&page_parentid=" + page_parentid + "&page_seqno=" + page_seqno + "&parentid=" + parentid, function(data) {
                    $("#div-seqno").html(data);
                });
            });
        });

        //
        // Hides all editors on the page. This callback is called from jquery.attachments.js
        //
        function hideEditors() {
            $("#pageregions .input, #globalregions .input").hide();
            $("#regionbuttons button").removeClass("active");
            $("#attachments").hide();
        }

        //
        // This callback is called from jquery.attachments.js
        //
        function addAttachment(a) {
            $(".attachments").append(
                '<tr data-id="' + a.Id + '">' +
                    '<td><img src="' + a.ThumbnailUrl + '/50")" /></td>' +
                    '<td>' + a.DisplayName + '</td>' +
                    '<td>' + a.Type + '</td>' +
                    '<td class="buttons three">' +
                        '<a class="icon up marg"></a>' +
                        '<a class="icon down marg"></a>' +
                        '<a class="icon delete"></a></td>' +
                '</tr>') ;
        }

        //
        // This callback is called from jquery.attachments.js before form submit.
        //
        function addAttachmentData(index, val) {
            $("#attachment_data").append(
                    '<input id="Page_Attachments_' + index +
                    '_" name="Page.Attachments[' + index +
                    ']" type="hidden" value="' + $(val).attr("data-id") + '" />');
        }
    </script>
}

@section Toolbar {
@Html.Partial("Partial/TabsContent")
<div class="toolbar">
    <div class="inner">
        <ul>
            <li><a class="save submit">@Piranha.Resources.Global.ToolbarSave</a></li>
            @if (!Model.Page.IsNew) {
            <li><a href="http://@Request.Url.DnsSafeHost@Url.GetPermalink(Model.Page.Permalink, true).ToLower()" target="preview" class="preview">@Piranha.Resources.Global.ToolbarPreview</a></li>
            }
            <li><a class="publish">@Piranha.Resources.Global.ToolbarPublish</a></li>
            @if (Model.Page.Published > DateTime.MinValue) {
            <li><a href="@Url.Action("unpublish", new { id = Model.Page.Id })" class="unpublish">@Piranha.Resources.Global.ToolbarUnpublish</a></li>
            }
            @if (Model.Page.Published > DateTime.MinValue && Model.Page.Updated > Model.Page.LastPublished) {
            <li><a href="@Url.Action("revert", new { id = Model.Page.Id })" class="revert">@Piranha.Resources.Global.ToolbarRevert</a></li>
            }
            <li><a href="@Url.Action("delete", new { id = Model.Page.Id })" class="delete">@Piranha.Resources.Global.ToolbarDelete</a></li>
            <li><a href="@Url.Action("index")" class="back">@Piranha.Resources.Global.ToolbarBack</a></li>
            <li><a href="" class="refresh">@Piranha.Resources.Global.ToolbarReload</a></li>
        </ul>
        <div class="clear"></div>
    </div>
</div>
}

@{ Html.BeginForm("edit", "page") ; }
<div>
    @Html.HiddenFor(m => m.Page.IsNew)
    @Html.HiddenFor(m => m.Page.Id)
    @Html.HiddenFor(m => m.Page.IsDraft)
    @Html.HiddenFor(m => m.Page.Permalink)
    @Html.HiddenFor(m => m.Page.TemplateId)
    @Html.HiddenFor(m => m.Page.PermalinkId)
    @Html.HiddenFor(m => m.Page.Permalink)
    @Html.HiddenFor(m => m.Page.Created)
    @Html.HiddenFor(m => m.Page.Updated)
    @Html.HiddenFor(m => m.Page.Published)
    @Html.HiddenFor(m => m.Page.LastPublished)
    @Html.HiddenFor(m => m.Page.CreatedBy)
    @Html.HiddenFor(m => m.Page.UpdatedBy)
    @Html.HiddenFor(m => m.Permalink.IsNew)
    @Html.HiddenFor(m => m.Permalink.Id)
    @Html.HiddenFor(m => m.Permalink.NamespaceId)
    @Html.HiddenFor(m => m.Permalink.Type)
    @Html.HiddenFor(m => m.Permalink.Created)
    @Html.HiddenFor(m => m.Permalink.CreatedBy)
    <input type="hidden" id="draft" name="draft" value="true" />
    <input type="hidden" id="org_parentid" value="@Model.Page.ParentId" />
</div>
<div class="grid_9">
    <div class="box expandable">
        <div class="title"><h2>@Piranha.Resources.Global.Information</h2></div>
        <div class="inner">
            <ul class="form">
                <li>@Html.LabelFor(m => m.Page.Title)
                    <div class="input">
                        @Html.TextBoxFor(m => m.Page.Title)</div>
                    @Html.ValidationMessageFor(m => m.Page.Title)
                </li>
                <li class="protected">@Html.LabelFor(m => m.Page.Permalink)
                	@if (!Model.Page.IsNew) {
                    <p>http://@Request.Url.DnsSafeHost@Url.GetPermalink(Model.Page.Permalink).ToLower()</p>
                    } else {
                    <p><i>@Piranha.Resources.Page.PermalinkDescription</i></p>
                    }
                    <div class="input">
                        @Html.TextBoxFor(m => m.Permalink.Name)</div>
                    <a class="locked"></a>
                </li>
                <li>
                    <label>@Piranha.Resources.Global.Placement</label>
                    @if (!Model.Page.IsStartpage) {
                    <p>@Piranha.Resources.Global.PlacementPage <strong>@(Model.Page.Seqno > 1 ? @Piranha.Resources.Global.PlacementAfter : @Piranha.Resources.Global.PlacementBelow)</strong> &quot;@Model.PlaceRef&quot;</p>
                    } else {
                    <p>@Piranha.Resources.Global.PlacementStart</p>
                    }
                </li>
                @if (Model.Template.ShowController) {
                <li>@Html.LabelFor(m => m.Page.PageController)
                    <div class="input">
                        @Html.TextBoxFor(m => m.Page.PageController, new { @placeholder = !String.IsNullOrEmpty(Model.Template.Controller) ? Model.Template.Controller : Piranha.Resources.Global.Optional })</div>
                    @Html.ValidationMessageFor(m => m.Page.PageController)
                </li>
                }
                @if (Model.Template.ShowRedirect) {
                <li>@Html.LabelFor(m => m.Page.PageRedirect)
                    <div class="input">
                        @Html.TextBoxFor(m => m.Page.PageRedirect, new { @placeholder = !String.IsNullOrEmpty(Model.Template.Redirect) ? Model.Template.Redirect : Piranha.Resources.Global.Optional })</div>
                    @Html.ValidationMessageFor(m => m.Page.PageRedirect)
                </li>
                }
            </ul>
            <ul class="form optional">
                <li>@Html.LabelFor(m => m.Page.NavigationTitle)
                    <div class="input">
                        @Html.TextBoxFor(m => m.Page.NavigationTitle, new { @placeholder = Piranha.Resources.Global.Optional })</div>
                    @Html.ValidationMessageFor(m => m.Page.NavigationTitle)
                </li>
                <li>
                    @Html.LabelFor(m => m.Page.GroupId)
                    <div class="input">
                        @Html.DropDownListFor(m => m.Page.GroupId, Model.Groups)</div>
                </li>
                <li>
                    @Html.LabelFor(m => m.Page.IsHidden)
                    <p>@Html.CheckBoxFor(m => m.Page.IsHidden) (@Piranha.Resources.Page.HiddenDescription)</p>
                </li>
                <li>@Html.LabelFor(m => m.Page.Keywords)
                    <div class="input"> 
                        @Html.TextBoxFor(m => m.Page.Keywords, new { @placeholder = Piranha.Resources.Global.Optional })</div>
                    @Html.ValidationMessageFor(m => m.Page.Keywords)
                </li>
                <li>@Html.LabelFor(m => m.Page.Description)
                    <div class="input">
                        @Html.TextAreaFor(m => m.Page.Description, new { @rows = 3, @placeholder = Piranha.Resources.Global.Optional })</div>
                    @Html.ValidationMessageFor(m => m.Page.Description)
                </li>
            </ul>
        </div>
    </div>

    <div class="box content-editor">
        <div class="title">
            <div id="regionbuttons" class="buttons">
                @for (int n = 0; n < Model.PageRegions.Count; n++) {
                <button id="@Html.Raw("btn_" + Model.PageRegions[n].Name)" class="btn@(n > 0 ? "" : " active") pageregion">@Model.PageRegions[n].Name</button>
                }
                <button id="btn_attachments" class="btn@(Model.PageRegions.Count == 0 ? " active" : "")">@Piranha.Resources.Page.Attachments</button>
            </div>
            <h2>@Piranha.Resources.Global.Content</h2>
        </div>
        <div class="inner">
            @if (Model.PageRegions.Count > 0) {
            <div id="pageregions">
                @Html.EditorFor(m => m.PageRegions)
            </div>
            }
            <div id="attachments" @(Model.PageRegions.Count > 0 ? "style=display:none" : "")>
                @Html.Partial("Partial/Attachments")
            </div>
        </div>
    </div>    
</div>
<div class="grid_3">
    <div class="box pagetemplate">
        <div class="title"><h2>@Model.Template.Name</h2></div>
        <div class="inner">
            <div class="edit">
                @Model.Template.Preview
            </div>
            <p><small>@Model.Template.Description</small></p>
        </div>
    </div>
    @if (Model.Properties.Count > 0) {
    <div class="box expandable">
        <div class="title expanded"><h2>@Piranha.Resources.Global.Properties</h2></div>
        <div class="inner optional">
            <ul class="form">
            @for (int n = 0; n < Model.Properties.Count; n++) {
                <li>@Html.LabelFor(m => m.Properties[n], Model.Properties[n].Name)
                    @Html.HiddenFor(m => m.Properties[n].Id)
                    @Html.HiddenFor(m => m.Properties[n].IsDraft)
                    @Html.HiddenFor(m => m.Properties[n].ParentId)
                    @Html.HiddenFor(m => m.Properties[n].Name)
                    @Html.HiddenFor(m => m.Properties[n].Created)
                    @Html.HiddenFor(m => m.Properties[n].CreatedBy)
                    @Html.HiddenFor(m => m.Properties[n].IsNew)
                    <div class="input">
                        @Html.TextBoxFor(m => m.Properties[n].Value)</div>
                </li>
            }
            </ul>
        </div>
    </div>
    }
    <div class="box expandable">
        <div class="title"><h2>@Piranha.Resources.Page.Placement</h2></div>
        <div class="inner optional">
            <ul class="form">
                <li>@Html.LabelFor(m => m.Page.ParentId)
                    <div class="input">
                        <select id="Page_ParentId" name="Page.ParentId">
                            @foreach (var p in Model.Parents) {
                            <option@(p.Level > 1 ? " style=padding-left:" + (p.Level - 1) * 14 + "px" : "") value="@p.Id"@(p.IsSelected ? " selected=selected" : "")>
                                @p.Title</option>
                            }
                        </select>
                    </div>
                </li>
                <li>@Html.LabelFor(m => m.Page.Seqno)
                    <div class="input" id="div-seqno">
                        <select id="Page_Seqno" name="Page.Seqno">
                        @foreach (var s in Model.Siblings) {
                        <option value="@s.Seqno"@(s.IsSelected ? " selected=selected" : "")>@s.Title</option>
                        }
                        </select>
                    </div>
                </li>
            </ul>
        </div>
    </div>
    @if (!Model.Page.IsNew) {
    <div class="box expandable">
        <div class="title"><h2>@Piranha.Resources.Global.Versioning</h2></div>
        <div class="inner optional">
            <ul class="list">
                <li>@Piranha.Resources.Global.LastPublished <small class="right">
                    @(Model.Page.LastPublished > DateTime.MinValue ? Model.Page.LastPublished.ToShortDateString() : "")</small></li>
                <li>@Piranha.Resources.Global.Published <small class="right">
                    @(Model.Page.Published > DateTime.MinValue ? Model.Page.Published.ToShortDateString() : "")</small></li>
                <li>@Piranha.Resources.Global.Updated <small class="right">@Model.Page.Updated.ToShortDateString()</small></li>
                <li>@Piranha.Resources.Global.Created <small class="right">@Model.Page.Created.ToShortDateString()</small></li>
            </ul>
        </div>
    </div>
    }
</div>
@{ Html.EndForm() ; }
@section Foot {
 <div id="boxContent" class="floatbox">
    <div class="bg"></div>
    <div class="box" style="min-width: 510px;min-height:260px;">
    </div>
</div>
   @if (false) { // (!Model.Page.IsNew) {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".toolbar .page-preview").attr("src", "http://@Request.Url.DnsSafeHost@Url.GetPreviewlink(Model.Page.Id).ToLower()");
            $.each($(".toolbar .tooltip"), function (i, e) {
                $(this).css({ left: -(($(this).outerWidth() - $(this).parent("li").width()) / 2) });
            });
        });
    </script>
    }
}